var documenterSearchIndex = {"docs":
[{"location":"index.html#ModelStatisticsLH","page":"ModelStatisticsLH","title":"ModelStatisticsLH","text":"","category":"section"},{"location":"index.html","page":"ModelStatisticsLH","title":"ModelStatisticsLH","text":"A package that offers containers for storing model generated statistics by group.","category":"page"},{"location":"index.html#VarInfo","page":"ModelStatisticsLH","title":"VarInfo","text":"","category":"section"},{"location":"index.html","page":"ModelStatisticsLH","title":"ModelStatisticsLH","text":"Contains information about a variable:","category":"page"},{"location":"index.html","page":"ModelStatisticsLH","title":"ModelStatisticsLH","text":"name\ndescription\ndata type and size\noptional additional meta info stored as key value pairs","category":"page"},{"location":"index.html","page":"ModelStatisticsLH","title":"ModelStatisticsLH","text":"VarInfo\nget_options\nget_options\nhas_option\nvar_name\ndescription\nbounds\ninit_values\ncheck_var","category":"page"},{"location":"index.html#ModelStatisticsLH.VarInfo","page":"ModelStatisticsLH","title":"ModelStatisticsLH.VarInfo","text":"Holds meta information about one variable. options holds predefined options and user defined options. Predefined options are:\n\nsize (required)\nlb, ub\nlbs, ubs\ndimSums\ngrandSum\n\nThese can be used to check a data matrix.\n\n\n\n\n\n","category":"type"},{"location":"index.html#ModelStatisticsLH.get_options","page":"ModelStatisticsLH","title":"ModelStatisticsLH.get_options","text":"Get multiple options. nothing if not found.\n\n\n\n\n\n","category":"function"},{"location":"index.html#ModelStatisticsLH.var_name","page":"ModelStatisticsLH","title":"ModelStatisticsLH.var_name","text":"Returns name of the variable.\n\n\n\n\n\n","category":"function"},{"location":"index.html#ModelStatisticsLH.bounds","page":"ModelStatisticsLH","title":"ModelStatisticsLH.bounds","text":"Returns the bounds of the variable. These are nothing if not set.\n\n\n\n\n\n","category":"function"},{"location":"index.html#ModelStatisticsLH.check_var","page":"ModelStatisticsLH","title":"ModelStatisticsLH.check_var","text":"check_var(vi, x; silent)\n\n\nCheck an array against the constraints implied by a ArrayInfo.\n\nArguments\n\nsilent: governs whether @warn messages are shown.\n\n\n\n\n\n","category":"function"},{"location":"index.html#ModelStats","page":"ModelStatisticsLH","title":"ModelStats","text":"","category":"section"},{"location":"index.html","page":"ModelStatisticsLH","title":"ModelStatisticsLH","text":"Holds statistics and meta information.","category":"page"},{"location":"index.html","page":"ModelStatisticsLH","title":"ModelStatisticsLH","text":"Values can be accessed and set using dot notation:","category":"page"},{"location":"index.html","page":"ModelStatisticsLH","title":"ModelStatisticsLH","text":"g.x == get_values(g, :x);\nz = g.x[1:2, 3, 4];\ng.x = [1,2,3];\ng.x[1:2, 3:5] = rand(2,3);\ng.x[1:2, 3:5] .= 0.5;","category":"page"},{"location":"index.html","page":"ModelStatisticsLH","title":"ModelStatisticsLH","text":"ModelStats\nget_meta\nhas_variable\nn_vars\nvar_names\nvar_meta\nvalidate_variable\nvalidate_stats\ndata_table\nadd_variable!\ndelete_variable!\nget_values\nset_values!","category":"page"},{"location":"index.html#ModelStatisticsLH.ModelStats","page":"ModelStatisticsLH","title":"ModelStatisticsLH.ModelStats","text":"Container that holds model statistics (arrays or scalars) and meta information.  For each variable, a VarInfo object holds info needed to display and check the data.\n\n\n\n\n\n","category":"type"},{"location":"index.html#ModelStatisticsLH.get_meta","page":"ModelStatisticsLH","title":"ModelStatisticsLH.get_meta","text":"get_meta(g, mName)\n\n\nRetrieve meta info (not for a variable).\n\n\n\n\n\n","category":"function"},{"location":"index.html#ModelStatisticsLH.has_variable","page":"ModelStatisticsLH","title":"ModelStatisticsLH.has_variable","text":"has_variable(g, vName)\n\n\nDo GroupStats contain variable vName?\n\n\n\n\n\n","category":"function"},{"location":"index.html#ModelStatisticsLH.n_vars","page":"ModelStatisticsLH","title":"ModelStatisticsLH.n_vars","text":"n_vars(g)\n\n\nNumber of variables.\n\n\n\n\n\n","category":"function"},{"location":"index.html#ModelStatisticsLH.var_names","page":"ModelStatisticsLH","title":"ModelStatisticsLH.var_names","text":"var_names(g)\n\n\nReturn all variable names.\n\n\n\n\n\n","category":"function"},{"location":"index.html#ModelStatisticsLH.var_meta","page":"ModelStatisticsLH","title":"ModelStatisticsLH.var_meta","text":"var_meta(g, vName)\n\n\nReturn meta info for a variable. Errors if not found.\n\n\n\n\n\n","category":"function"},{"location":"index.html#ModelStatisticsLH.validate_stats","page":"ModelStatisticsLH","title":"ModelStatisticsLH.validate_stats","text":"validate_stats(g; silent)\n\n\nCheck that \n\nall data are inside bounds\n\n\n\n\n\n","category":"function"},{"location":"index.html#ModelStatisticsLH.add_variable!","page":"ModelStatisticsLH","title":"ModelStatisticsLH.add_variable!","text":"add_variable!(g, vInfo, newValues)\n\n\nAdd a variable.\n\nArguments\n\nvInfo: Can be a VarInfo or a Tuple of values that can be fed into the VarInfo constructor.\n\nExample\n\nadd_variable!(g, (:vName, 0.0, 1.0), [1,2,3]);\n\n\n\n\n\n","category":"function"},{"location":"index.html#ModelStatisticsLH.delete_variable!","page":"ModelStatisticsLH","title":"ModelStatisticsLH.delete_variable!","text":"delete_variable!(g, vName)\n\n\nDelete a variable. Errors if it does not exist.\n\n\n\n\n\n","category":"function"},{"location":"index.html#ModelStatisticsLH.get_values","page":"ModelStatisticsLH","title":"ModelStatisticsLH.get_values","text":"get_values(g, vName)\n\n\nReturn values for a variable. Errors if not found.\n\n\n\n\n\n","category":"function"},{"location":"index.html#ModelStatisticsLH.set_values!","page":"ModelStatisticsLH","title":"ModelStatisticsLH.set_values!","text":"set_values!(g, vName, newValues; validate, silent)\n\n\nSet values for a variable. Errors if variable does not exist. Optional: validates values against meta info.\n\nExample\n\nset_values!(g, :x, [1,2,3]);\n# This can also be called with dot notation\ng.x = [1,2,3];\n\n\n\n\n\n","category":"function"},{"location":"index.html","page":"ModelStatisticsLH","title":"ModelStatisticsLH","text":"","category":"page"}]
}
