{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"econ890/julia/testing.html","text":"Testing \u00b6 The golden rule: When you write a function, write a test function to go with it. It is hard to overstate the importance of automated testing. It gives you peace of mind. When you change some code, you can simply rerun your test suite and ensure that nothing has been broken. The key is to fully automate the testing. Your project should have a single function that runs all tests in order. All programming languages have unit testing frameworks that make it easy to automate this process. Julia's is described here . Testing basics \u00b6 The testing framework (and really all of Julia) is designed to work with packages . But we can explore the basics even without creating a package (yet). The key elements are: The @test macro: @test 1 == 1 runs silently @test 1 == 2 produces an error, but tests keep running The @testset macro groups tests for clearer reporting. Example: testing.jl and testing_test.jl .","title":"Testing"},{"location":"econ890/julia/testing.html#testing","text":"The golden rule: When you write a function, write a test function to go with it. It is hard to overstate the importance of automated testing. It gives you peace of mind. When you change some code, you can simply rerun your test suite and ensure that nothing has been broken. The key is to fully automate the testing. Your project should have a single function that runs all tests in order. All programming languages have unit testing frameworks that make it easy to automate this process. Julia's is described here .","title":"Testing"},{"location":"econ890/julia/testing.html#testing-basics","text":"The testing framework (and really all of Julia) is designed to work with packages . But we can explore the basics even without creating a package (yet). The key elements are: The @test macro: @test 1 == 1 runs silently @test 1 == 2 produces an error, but tests keep running The @testset macro groups tests for clearer reporting. Example: testing.jl and testing_test.jl .","title":"Testing basics"}]}